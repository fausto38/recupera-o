<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.Icon" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        AAABAAEAAAAAAAEAIADdBAAAFgAAAIlQTkcNChoKAAAADUlIRFIAAAEAAAABAAgEAAAA9ntg7QAAAAFv
        ck5UAc+id5oAAASXSURBVHja7d2/b5VlFAfwL0OhJCVRozCUyR9FTKhdxUTCP0CZpRAT+AcwEZRByoKO
        4ChIxETYZKmDWhdxgk1ahJFQk5YEGFpIKyT6lFotUpzlPZ/Pd+p6zu2973vfc8+TAAAAAAAAAAAAAAAA
        AAAAAAAAAAAA/z8vZCjDGck+6VxGWmeHWoefaiBH8nNmMpf5LEjnMt86O5OLrcsDTzZ/ffZnIn9IiUzm
        QOv4Chvyae4pTKHcyyet639Zm6PtDUJRamUho+lZegHszl0FKZg7rfPNxvyoGEUz3rqfvZlViqKZbbeG
        Oa8QhXMuua4MhXMtbv9KZy55qAyF8yDtZkAZ6uZ2clkZCudSckIZCudEsjPTClE006376c0ppSiaz1v3
        m8FMKkbBTGTb8vPA4UwpSLFMZdc/8wBr2h/GQWr99w+3rj9mMKdzS2kKZKZd9W1bbSZwXbZnNGO5khu5
        KZ3LjdbZsdbht1qn/0NfNqU/m6Vz6W+d7TP4DgAAAAAAAAAAAAAAAAAA3eHn4WV/Ht6bt3Ms32bCgoiO
        LoiYaN09lu1Lu8H+7c18YUVMidxqnR58vPlrMpyrSlMok9m9ckmUNXEV18QNL7ffosiaubr0QdCb04pR
        NKcWLwctiy6+LPqkQtReF+/AiOIHRjgypnJuOzSqdh44Nq525hwcWTvXHB1bO187PLpyZrMneSnjSlE0
        4637jx4F3VWMgrmzfGpQTz7OgoIUy0KOts7/PQZ2vN0QKEql27/jj4+H9ea9/KIwRTKZ/auNhb2aj3Ix
        M+3VMd/eIKRrmW+dnclPrcuvPX0w9PkMtYvCkeyTzmWkXfQNtQ4DAAAAAAAAAAAAAAAAAACdsSY9WSud
        S8/KM0JW91x25P18ljM5K53LmZxs3d3RuryqDRnJuNXRBXaDjWfPk8fHvZKvcl95iuR+ez94eWX7t1gW
        WXBJ5Jbl9r+YCwpSMBda5x9d8x92ZkDJPMyhxfuCN/KrYpTdF7g1+TAPlKLseSGHk+8VonC+S35ThsKZ
        ij3hxXeGewFUfwH4CCj+EeAisPhFoNvAuvk9h5KtuaoUZb8Ien3xq+BDvgou+jXQBx4GVc43Sw+DFg14
        HFz5cfCil3PWQEiZ3MuXjw+ELOrLnvxgJKzzudO6/O6TI2HLQ6Hv5GBOGgrt7FDowdbh54yFGwsHAAAA
        AAAAAAAAAAAAAACeeS9kKMMZyT7pXEZaZ4dah59qIEfyc2Yyl/ksSOcy3zo7k4utywNPNn999mfCApUy
        +wEPtI6vsCGf5p7ClFoT9Unr+l/W5qid4QX3hI+mZ+kFsDt3FaTkvrDdi+3fmB8Vo+yyyI3J3swqRdHM
        tlvDnFeIwjmXXFeGwrkWt3+lMxdnBRQ/M8B66NK5nVxWhsK5lJxQhsI5kezMtEIUzXTrfnpzSimK5vPW
        /WYwk4pRMBPZtvw8cDhTClIsU9n1zzzAmvaHcZBa//3D/z4/ZDCnc0tpCmSmXfVtW20mcF22ZzRjuZIb
        uSmdy43W2bHW4bdap/9DXzalP5ulc+lvne0z+A4AAAAAAAAAAAAAAAAAAPBM+hMIDIKx7lzRKQAAAABJ
        RU5ErkJggg==
</value>
  </data>
</root>